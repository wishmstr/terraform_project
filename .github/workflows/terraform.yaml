name: Terraform Plan

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

concurrency: terraform

defaults:
  run:
    working-directory: ./terraform-v2

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    env:
      TF_VAR_terraform_ip: ${{ secrets.TERRAFORM_IP }}
      TF_VAR_db_username: ${{ secrets.TERRAFORM_DBUSER }}
      TF_VAR_db_password: ${{ secrets.TERRAFORM_DBPASS }}
    
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.10.5
        terraform_wrapper: false

    - name: Format
      run: terraform fmt -recursive -check -diff
    
    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::651706766894:role/terraform_actions_role2
        aws-region: us-east-2
    
    - name: Init
      run: terraform init #\     
        # -backend-config "bucket=${{ secrets.AWS_STATE_BUCKET }}" \
        # -backend-config "key=${{ secrets.AWS_SECRET_KEY_ID }}" \
        # -backend-config "region=${{ secrets.AWS_REGION }}" \
        
    - name: Validate
      run: terraform validate

    # - name: Plan
    #   run: terraform plan
    - name: Plan
      run: terraform plan -destroy -out=${{ runner.temp }}/tfplan

    - name: Apply
      if: github.event_name != 'pull_request'
      run: terraform apply ${{ runner.temp }}/tfplan